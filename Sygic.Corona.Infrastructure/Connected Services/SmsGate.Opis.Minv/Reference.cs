//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmsGate.Opis.Minv
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsExtRet", Namespace="http://schemas.datacontract.org/2004/07/SmsExtService.InterfaceDef")]
    public partial class SmsExtRet : object
    {
        
        private string ErrMsgField;
        
        private System.Guid MessageIdField;
        
        private SmsGate.Opis.Minv.SmsExtRet.ResultTypeEnum ResultStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMsg
        {
            get
            {
                return this.ErrMsgField;
            }
            set
            {
                this.ErrMsgField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MessageId
        {
            get
            {
                return this.MessageIdField;
            }
            set
            {
                this.MessageIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmsGate.Opis.Minv.SmsExtRet.ResultTypeEnum ResultStatus
        {
            get
            {
                return this.ResultStatusField;
            }
            set
            {
                this.ResultStatusField = value;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
        [System.Runtime.Serialization.DataContractAttribute(Name="SmsExtRet.ResultTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/SmsExtService.InterfaceDef")]
        public enum ResultTypeEnum : int
        {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            OK = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ProcessErr = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FormatErr = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Other = 3,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schema.minv.sk/IP/ESISPZ-SMS/SmsEXT-v1", ConfigurationName="SmsGate.Opis.Minv.ISmsExt")]
    public interface ISmsExt
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.minv.sk/IP/ESISPZ-SMS/SmsEXT-v1/ISmsExt/SendMessage", ReplyAction="http://schema.minv.sk/IP/ESISPZ-SMS/SmsEXT-v1/ISmsExt/SendMessageResponse")]
        System.Threading.Tasks.Task<SmsGate.Opis.Minv.SmsExtRet> SendMessageAsync(string Destination, string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.minv.sk/IP/ESISPZ-SMS/SmsEXT-v1/ISmsExt/Ping", ReplyAction="http://schema.minv.sk/IP/ESISPZ-SMS/SmsEXT-v1/ISmsExt/PingResponse")]
        System.Threading.Tasks.Task<int> PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ISmsExtChannel : SmsGate.Opis.Minv.ISmsExt, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class SmsExtClient : System.ServiceModel.ClientBase<SmsGate.Opis.Minv.ISmsExt>, SmsGate.Opis.Minv.ISmsExt
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);

        public SmsExtClient(string endpointUrl, System.TimeSpan timeout, string username, string password) :
            base(SmsExtClient.GetBindingForEndpoint(timeout), SmsExtClient.GetEndpointAddress(endpointUrl))
        {
            this.ChannelFactory.Credentials.UserName.UserName = username;
            this.ChannelFactory.Credentials.UserName.Password = password;
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public SmsExtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public System.Threading.Tasks.Task<SmsGate.Opis.Minv.SmsExtRet> SendMessageAsync(string Destination, string Message)
        {
            return base.Channel.SendMessageAsync(Destination, Message);
        }
        
        public System.Threading.Tasks.Task<int> PingAsync()
        {
            return base.Channel.PingAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(System.TimeSpan timeout)
        {
            var httpsBinding = new System.ServiceModel.BasicHttpsBinding();
            httpsBinding.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Basic;
            httpsBinding.Security.Mode = System.ServiceModel.BasicHttpsSecurityMode.Transport;

            var integerMaxValue = int.MaxValue;
            httpsBinding.MaxBufferSize = integerMaxValue;
            httpsBinding.MaxReceivedMessageSize = integerMaxValue;
            httpsBinding.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
            httpsBinding.AllowCookies = true;

            httpsBinding.ReceiveTimeout = timeout;
            httpsBinding.SendTimeout = timeout;
            httpsBinding.OpenTimeout = timeout;
            httpsBinding.CloseTimeout = timeout;

            return httpsBinding;
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(string endpointUrl)
        {
            return new System.ServiceModel.EndpointAddress(endpointUrl);
        }
    }
}
